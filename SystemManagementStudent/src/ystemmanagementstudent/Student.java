/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ystemmanagementstudent;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author reli
 */
public class Student extends javax.swing.JFrame {

    /**
     * Creates new form Student
     */
    public Student() {
        initComponents();
    }
    
    

    public class PhoneNumberValidator {

        // Regular expression to validate phone numbers with 9 digits starting with 6
        private static final String PHONE_REGEX = "^6\\d{8}$";

        public static boolean isValidPhoneNumber(String phoneNumber) {
            // Remove any spaces or hyphens from the phone number
            phoneNumber = phoneNumber.replaceAll("[\\s-]", "");

            // Compile the regex pattern
            Pattern pattern = Pattern.compile(PHONE_REGEX);
            Matcher matcher = pattern.matcher(phoneNumber);

            // Check if the phone number matches the pattern
            return matcher.matches();
        }
    }


    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Birth = new javax.swing.JTextField();
        Phone = new javax.swing.JTextField();
        Leve = new javax.swing.JTextField();
        Nam = new javax.swing.JTextField();
        Matri = new javax.swing.JTextField();
        Add = new javax.swing.JButton();
        Remove = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        Male = new javax.swing.JRadioButton();
        Female = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Student");
        setPreferredSize(new java.awt.Dimension(450, 410));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Linux Biolinum O", 0, 36)); // NOI18N
        jLabel1.setText("Student");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(140, 6, 115, 42);

        jLabel2.setText("Matricule");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(23, 68, 58, 18);

        jLabel3.setText("Name");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(23, 110, 39, 18);

        jLabel4.setText("Level");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(23, 152, 34, 18);

        jLabel5.setText("Birth_Date");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(23, 246, 69, 18);

        jLabel6.setText("Gender");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(23, 194, 48, 18);

        jLabel7.setText("Phone_Number");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(23, 288, 102, 18);
        getContentPane().add(Birth);
        Birth.setBounds(151, 243, 207, 24);
        getContentPane().add(Phone);
        Phone.setBounds(151, 285, 207, 24);
        getContentPane().add(Leve);
        Leve.setBounds(151, 149, 207, 24);

        Nam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NamActionPerformed(evt);
            }
        });
        getContentPane().add(Nam);
        Nam.setBounds(151, 107, 207, 24);
        getContentPane().add(Matri);
        Matri.setBounds(151, 65, 207, 24);

        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        getContentPane().add(Add);
        Add.setBounds(20, 340, 72, 24);

        Remove.setText("Remove");
        Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveActionPerformed(evt);
            }
        });
        getContentPane().add(Remove);
        Remove.setBounds(140, 340, 90, 24);

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        getContentPane().add(Update);
        Update.setBounds(270, 340, 90, 24);

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("X");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(400, 340, 40, 24);

        Male.setText("M");
        getContentPane().add(Male);
        Male.setBounds(150, 190, 50, 22);

        Female.setText("F");
        getContentPane().add(Female);
        Female.setBounds(294, 190, 60, 22);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NamActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        
        // Database connection details
        String url = "jdbc:mysql://localhost/studentmanagement";
        String user = "root";
        String password = "root";

        // SQL query with correct number of placeholders
        String sql = "INSERT INTO student(name, level, gender, datenais, phonenumber) VALUES (?, ?, ?, ?, ?)";

        try (
            // Establish a connection to the database
            Connection con = DriverManager.getConnection(url, user, password);
            // Create a PreparedStatement
            PreparedStatement ps = con.prepareStatement(sql);
        ) {
            // Load the MySQL JDBC driver
            Class.forName("com.mysql.cj.jdbc.Driver");

            // Get input values from the form
            String name = Nam.getText();
            String level = Leve.getText();
            // Parse a date in "dd/MM/yyyy" format
            int birth = Integer.parseInt(Birth.getText());
            String phone = Phone.getText();
            String gender = Male.isSelected() ? Male.getText() : Female.getText();

            // Validate the phone number
            if (!PhoneNumberValidator.isValidPhoneNumber(phone)) {
                JOptionPane.showMessageDialog(this, "Invalid phone number! It must have 9 digits and start with 6.", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Stop execution if the phone number is invalid
            }
            
            // Convert the birth string to a java.sql.Date
//            java.sql.Date sqlDate = java.sql.Date.valueOf(birth);

            // Set parameters in the PreparedStatement
            ps.setString(1, name);       // name
            ps.setString(2, level);      // level
            ps.setString(3, gender);     // gender
            ps.setInt(4, birth);     // datenais (as a date)
            ps.setString(5, phone);        // phonenumber

            // Execute the query
            int rowsInserted = ps.executeUpdate();

            // Show success message
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(this, "Input successful!");
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "MySQL JDBC driver not found: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Invalid phone number format: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "An unexpected error occurred: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_AddActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:
        // Database connection details
        String url = "jdbc:mysql://localhost/studentmanagement";
        String user = "root";
        String password = "root";

        // SQL query with correct number of placeholders
        String sql = "UPDATE student "
                   + "SET name = ?, level = ?, gender = ?, datenais = ?, phonenumber = ? "
                   + "WHERE id = ?";

        try (
            // Establish a connection to the database
            Connection con = DriverManager.getConnection(url, user, password);
            // Create a PreparedStatement
            PreparedStatement ps = con.prepareStatement(sql);
        ) {
            // Load the MySQL JDBC driver
            Class.forName("com.mysql.cj.jdbc.Driver");

            // Get input values from the form
            String mat = Matri.getText();
            String name = Nam.getText();
            String level = Leve.getText();
            // Parse a date in "dd/MM/yyyy" format
            int birth = Integer.parseInt(Birth.getText());
            String phone = Phone.getText();
            String gender = Male.isSelected() ? Male.getText() : Female.getText();

            // Validate the phone number
        if (!PhoneNumberValidator.isValidPhoneNumber(phone)) {
            JOptionPane.showMessageDialog(this, "Invalid phone number! It must have 9 digits and start with 6.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if the phone number is invalid
        }
            
            // Convert the birth string to a java.sql.Date
//            java.sql.Date sqlDate = java.sql.Date.valueOf(birth);

            // Set parameters in the PreparedStatement
            ps.setString(1, name);       // name
            ps.setString(2, level);      // level
            ps.setString(3, gender);     // gender
            ps.setInt(4, birth);     // datenais (as a date)
            ps.setString(5, phone);        // phonenumber
            ps.setString(6, mat);

            // Execute the query
            int rowsInserted = ps.executeUpdate();

            // Show success message
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(this, "Update successful!");
            } else {
                JOptionPane.showMessageDialog(this, "No records updated. Please check the student ID.", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "MySQL JDBC driver not found: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Invalid phone number format: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "An unexpected error occurred: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_UpdateActionPerformed

    private void RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveActionPerformed
        // TODO add your handling code here:
        // Database connection details
        String url = "jdbc:mysql://localhost/studentmanagement";
        String user = "root";
        String password = "root";

        // SQL query with correct number of placeholders
        String sql = "DELETE from student WHERE id = ?";

        try (
            // Establish a connection to the database
            Connection con = DriverManager.getConnection(url, user, password);
            // Create a PreparedStatement
            PreparedStatement ps = con.prepareStatement(sql);
        ) {
            // Load the MySQL JDBC driver
            Class.forName("com.mysql.cj.jdbc.Driver");

            // Get input values from the form
            String mat = Matri.getText();
//            String name = Nam.getText();
//            String level = Leve.getText();
//            // Parse a date in "dd/MM/yyyy" format
//            int birth = Integer.parseInt(Birth.getText());
//            String phone = Phone.getText();
//            String gender = Male.isSelected() ? Male.getText() : Female.getText();
//
//            // Validate the phone number
//        if (!PhoneNumberValidator.isValidPhoneNumber(phone)) {
//            JOptionPane.showMessageDialog(this, "Invalid phone number! It must have 9 digits and start with 6.", "Error", JOptionPane.ERROR_MESSAGE);
//            return; // Stop execution if the phone number is invalid
//        }
            
            // Convert the birth string to a java.sql.Date
//            java.sql.Date sqlDate = java.sql.Date.valueOf(birth);

            // Set parameters in the PreparedStatement
//            ps.setString(1, name);       // name
//            ps.setString(2, level);      // level
//            ps.setString(3, gender);     // gender
//            ps.setInt(4, birth);     // datenais (as a date)
//            ps.setString(5, phone);        // phonenumber
            ps.setString(1, mat);

            // Execute the query
            int rowsInserted = ps.executeUpdate();

            // Show success message
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(this, "Delete successful!");
            } else {
                JOptionPane.showMessageDialog(this, "No records updated. Please check the student ID.", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "MySQL JDBC driver not found: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Invalid phone number format: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "An unexpected error occurred: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_RemoveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Student().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JTextField Birth;
    private javax.swing.JRadioButton Female;
    private javax.swing.JTextField Leve;
    private javax.swing.JRadioButton Male;
    private javax.swing.JTextField Matri;
    private javax.swing.JTextField Nam;
    private javax.swing.JTextField Phone;
    private javax.swing.JButton Remove;
    private javax.swing.JButton Update;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    // End of variables declaration//GEN-END:variables
}
